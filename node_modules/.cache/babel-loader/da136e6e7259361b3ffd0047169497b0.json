{"ast":null,"code":"var _jsxFileName = \"/Users/fuhong/project/react/Sorting_Visualizer/sorting_visualizer/src/SortingVisualizer/SortingVisualizer.jsx\";\nimport React from 'react';\nimport './SortingVisualizer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ARRAYNUM = 100;\nconst RAND_MIN = 5;\nconst RAND_MAX = 200;\nconst ANIMATE_SPEED = 500;\nexport default class SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: []\n    };\n  }\n\n  componentDidMount() {\n    this.resetArray();\n  }\n\n  mergeSort() {\n    for (let i = 0; i < 10; i++) {\n      setTimeout(() => {\n        this.resetArray();\n      }, ANIMATE_SPEED);\n    }\n  }\n\n  bubbleSort() {}\n\n  quickSort() {}\n\n  resetArray() {\n    const array = [];\n\n    for (let i = 0; i < ARRAYNUM; i++) {\n      array.push(randomNum(RAND_MIN, RAND_MAX));\n    }\n\n    console.log(array);\n    this.setState({\n      array: array\n    });\n  }\n\n  render() {\n    const {\n      array\n    } = this.state;\n    console.log(array);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"array-container\",\n        children: array.map((value, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"array-bar\",\n          style: {\n            height: `${value}px`,\n            backgroundColor: \"#3537F2\"\n          }\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.resetArray(),\n          children: \"New Array\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Array Length\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.mergeSort(),\n          children: \"Merge Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.bubbleSort(),\n          children: \"Bubble Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.quickSort(),\n          children: \"Quick Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction randomNum(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}","map":{"version":3,"sources":["/Users/fuhong/project/react/Sorting_Visualizer/sorting_visualizer/src/SortingVisualizer/SortingVisualizer.jsx"],"names":["React","ARRAYNUM","RAND_MIN","RAND_MAX","ANIMATE_SPEED","SortingVisualizer","Component","constructor","props","state","array","componentDidMount","resetArray","mergeSort","i","setTimeout","bubbleSort","quickSort","push","randomNum","console","log","setState","render","map","value","idx","height","backgroundColor","min","max","Math","floor","random"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,yBAAP;;AAGA,MAAMC,QAAQ,GAAG,GAAjB;AAEA,MAAMC,QAAQ,GAAG,CAAjB;AAEA,MAAMC,QAAQ,GAAG,GAAjB;AAEA,MAAMC,aAAa,GAAG,GAAtB;AAEA,eAAe,MAAMC,iBAAN,SAAgCL,KAAK,CAACM,SAAtC,CAAgD;AAC3DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,UAAL;AACH;;AAEDC,EAAAA,SAAS,GAAE;AACP,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzBC,MAAAA,UAAU,CAAC,MAAI;AAAC,aAAKH,UAAL;AAAkB,OAAxB,EAA0BR,aAA1B,CAAV;AACH;AACJ;;AAEDY,EAAAA,UAAU,GAAE,CAAE;;AAEdC,EAAAA,SAAS,GAAE,CAAE;;AAEbL,EAAAA,UAAU,GAAG;AACT,UAAMF,KAAK,GAAG,EAAd;;AACA,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,QAApB,EAA8Ba,CAAC,EAA/B,EAAmC;AAC/BJ,MAAAA,KAAK,CAACQ,IAAN,CAAWC,SAAS,CAACjB,QAAD,EAAWC,QAAX,CAApB;AACH;;AACDiB,IAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACA,SAAKY,QAAL,CAAc;AAACZ,MAAAA,KAAK,EAAEA;AAAR,KAAd;AACH;;AAEDa,EAAAA,MAAM,GAAG;AACL,UAAM;AAACb,MAAAA;AAAD,QAAU,KAAKD,KAArB;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,kBACKA,KAAK,CAACc,GAAN,CAAU,CAACC,KAAD,EAAQC,GAAR,kBACP;AACI,UAAA,SAAS,EAAC,WADd;AAGI,UAAA,KAAK,EAAE;AACHC,YAAAA,MAAM,EAAG,GAAEF,KAAM,IADd;AAEHG,YAAAA,eAAe,EAAE;AAFd;AAHX,WAESF,GAFT;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cADJ,eAaI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKd,UAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKC,SAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKG,UAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKC,SAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAuBH;;AA3D0D;;AA+D/D,SAASE,SAAT,CAAmBU,GAAnB,EAAwBC,GAAxB,EAA6B;AACzB,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,IAAkCA,GAA7C,CAAP;AACH","sourcesContent":["import React from 'react';\nimport './SortingVisualizer.css'\n\n\nconst ARRAYNUM = 100;\n\nconst RAND_MIN = 5;\n\nconst RAND_MAX = 200;\n\nconst ANIMATE_SPEED = 500;\n\nexport default class SortingVisualizer extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            array: []\n        };\n    }\n\n    componentDidMount() {\n        this.resetArray();\n    }\n\n    mergeSort(){\n        for (let i = 0; i < 10; i++) {\n            setTimeout(()=>{this.resetArray()}, ANIMATE_SPEED)\n        }\n    }\n\n    bubbleSort(){}\n\n    quickSort(){}\n\n    resetArray() {\n        const array = []\n        for (let i = 0; i < ARRAYNUM; i++) {\n            array.push(randomNum(RAND_MIN, RAND_MAX));\n        }\n        console.log(array);\n        this.setState({array: array})\n    }\n\n    render() {\n        const {array} = this.state\n        console.log(array)\n\n        return (\n            <div className=\"container\">\n                <div className=\"array-container\">\n                    {array.map((value, idx) => (\n                        <div\n                            className=\"array-bar\"\n                            key={idx}\n                            style={{\n                                height: `${value}px`,\n                                backgroundColor: \"#3537F2\",\n                            }}>\n                        </div>\n                    ))}\n                </div>\n                <div className=\"nav-bar\">\n                    <button onClick={() => this.resetArray()}>New Array</button>\n                    <button >Array Length</button>\n                    <button onClick={() => this.mergeSort()}>Merge Sort</button>\n                    <button onClick={() => this.bubbleSort()}>Bubble Sort</button>\n                    <button onClick={() => this.quickSort()}>Quick Sort</button>\n                </div>\n            </div>\n        );\n    }\n  \n}\n\nfunction randomNum(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}"]},"metadata":{},"sourceType":"module"}