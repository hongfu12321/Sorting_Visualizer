{"ast":null,"code":"var _jsxFileName = \"/Users/fuhong/project/react/Sorting_Visualizer/sorting_visualizer/src/SortingVisualizer/SortingVisualizer.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ARRAYNUM = 100;\nexport default class SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: []\n    };\n  }\n\n  mergeSort() {}\n\n  bubbleSort() {}\n\n  quickSort() {}\n\n  resetArray() {\n    const array = [];\n\n    for (let i = 0; i < ARRAYNUM; i++) {\n      array.push(randomNum(5, 1000));\n    }\n\n    console.log(array);\n    this.setState({\n      array: array\n    });\n  }\n\n  render() {\n    const array = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"array-body\",\n      children: [array.map((value, idx) => {\n        /*#__PURE__*/\n        _jsxDEV(\"div\", {\n          className: \"array-bar\",\n          style: {\n            height: `${value}px`\n          }\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.resetArray(),\n          children: \"New Array\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Array Length\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.mergeSort(),\n          children: \"Merge Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.bubbleSort(),\n          children: \"Bubble Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.quickSort(),\n          children: \"Quick Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction randomNum(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}","map":{"version":3,"sources":["/Users/fuhong/project/react/Sorting_Visualizer/sorting_visualizer/src/SortingVisualizer/SortingVisualizer.jsx"],"names":["React","ARRAYNUM","SortingVisualizer","Component","constructor","props","state","array","mergeSort","bubbleSort","quickSort","resetArray","i","push","randomNum","console","log","setState","render","map","value","idx","height","min","max","Math","floor","random"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,QAAQ,GAAG,GAAjB;AAEA,eAAe,MAAMC,iBAAN,SAAgCF,KAAK,CAACG,SAAtC,CAAgD;AAC3DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AAEDC,EAAAA,SAAS,GAAE,CAAE;;AAEbC,EAAAA,UAAU,GAAE,CAAE;;AAEdC,EAAAA,SAAS,GAAE,CAAE;;AAEbC,EAAAA,UAAU,GAAG;AACT,UAAMJ,KAAK,GAAG,EAAd;;AACA,SAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,QAApB,EAA8BW,CAAC,EAA/B,EAAmC;AAC/BL,MAAAA,KAAK,CAACM,IAAN,CAAWC,SAAS,CAAC,CAAD,EAAI,IAAJ,CAApB;AACH;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACA,SAAKU,QAAL,CAAc;AAACV,MAAAA,KAAK,EAAEA;AAAR,KAAd;AACH;;AAEDW,EAAAA,MAAM,GAAG;AACL,UAAMX,KAAK,GAAG,KAAKD,KAAnB;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,iBACKC,KAAK,CAACY,GAAN,CAAU,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACvB;AAAA;AAAK,UAAA,SAAS,EAAC,WAAf;AAAqC,UAAA,KAAK,EAAE;AACxCC,YAAAA,MAAM,EAAG,GAAEF,KAAM;AADuB;AAA5C,WAAgCC,GAAhC;AAAA;AAAA;AAAA;AAAA;AAGH,OAJA,CADL,eAMI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKV,UAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKH,SAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKC,UAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKC,SAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH;;AA3C0D;;AA+C/D,SAASI,SAAT,CAAmBS,GAAnB,EAAwBC,GAAxB,EAA6B;AACzB,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,IAAkCA,GAA7C,CAAP;AACH","sourcesContent":["import React from 'react';\n\n\nconst ARRAYNUM = 100;\n\nexport default class SortingVisualizer extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            array: []\n        };\n    }\n\n    mergeSort(){}\n\n    bubbleSort(){}\n\n    quickSort(){}\n\n    resetArray() {\n        const array = []\n        for (let i = 0; i < ARRAYNUM; i++) {\n            array.push(randomNum(5, 1000));\n        }\n        console.log(array);\n        this.setState({array: array})\n    }\n\n    render() {\n        const array = this.state\n\n        return (\n            <div className=\"array-body\">\n                {array.map((value, idx) => {\n                    <div className=\"array-bar\" key={idx} style={{\n                        height: `${value}px`,\n                    }}></div>\n                })}\n                <div className=\"nav-bar\">\n                    <button onClick={() => this.resetArray()}>New Array</button>\n                    <button >Array Length</button>\n                    <button onClick={() => this.mergeSort()}>Merge Sort</button>\n                    <button onClick={() => this.bubbleSort()}>Bubble Sort</button>\n                    <button onClick={() => this.quickSort()}>Quick Sort</button>\n                </div>\n            </div>\n        );\n    }\n  \n}\n\nfunction randomNum(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}"]},"metadata":{},"sourceType":"module"}