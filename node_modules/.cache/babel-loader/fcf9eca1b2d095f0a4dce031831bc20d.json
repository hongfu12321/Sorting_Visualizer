{"ast":null,"code":"export function getBubbleSortAnimation(array) {\n  console.log('Start Bubble Sort!');\n  let animations = [];\n  let arr_len = array.length;\n\n  for (let i = 0; i < arr_len; i++) {\n    for (let j = 0; j < arr_len - i - 1; j++) {\n      animations.push([j, j + 1, array[j], array[j + 1], 0]);\n\n      if (array[j] > array[j + 1]) {\n        let tmp = array[j];\n        array[j] = array[j + 1];\n        array[j + 1] = tmp;\n      }\n    } // Index of the confirm sorted element.\n\n\n    animations.push([arr_len - i - 1, 0, 0, 0, 1]);\n  }\n\n  console.log(arraySorted(array));\n  return animations;\n}\nexport function getMergeSortAnimation(array) {\n  console.log('Start Merge Sort!');\n  const arr = mergeSort(array);\n  console.log(arraySorted(arr));\n}\n\nfunction mergeSort(array) {\n  if (!array || array.length < 2) return array;\n  const half = array.length / 2;\n  const left = array.splice(0, half);\n  merge(mergeSort(left), mergeSort(array));\n}\n\nfunction merge(left, right) {\n  let arr = [];\n\n  while (left.length && right.length) {\n    if (left[0] < right[0]) {\n      arr.push(left.shift());\n    } else {\n      arr.push(right.shift());\n    }\n  }\n\n  return [...arr, ...left, ...right];\n}\n\nfunction arraySorted(array) {\n  if (array.length <= 1) {\n    return true;\n  }\n\n  let pre = array[0];\n\n  for (let i = 1; i < array.length; i++) {\n    if (array[i] < pre) {\n      return false;\n    }\n\n    pre = array[i];\n  }\n\n  return true;\n}","map":{"version":3,"sources":["/Users/fuhong/project/react/Sorting_Visualizer/sorting_visualizer/src/SortingAlgorithms/SortingAlgorithms.jsx"],"names":["getBubbleSortAnimation","array","console","log","animations","arr_len","length","i","j","push","tmp","arraySorted","getMergeSortAnimation","arr","mergeSort","half","left","splice","merge","right","shift","pre"],"mappings":"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","sourcesContent":["export function getBubbleSortAnimation(array) {\n    console.log('Start Bubble Sort!');\n    \n    let animations = [];\n    let arr_len = array.length;\n\n    for (let i = 0; i < arr_len; i++) {\n        for (let j = 0; j < arr_len - i - 1; j++) {\n            animations.push([j, j + 1, array[j], array[j + 1], 0]);\n\n            if (array[j] > array[j + 1]) {\n                let tmp = array[j];\n                array[j] = array[j + 1];\n                array[j + 1] = tmp;\n            }\n        }\n        // Index of the confirm sorted element.\n        animations.push([arr_len - i - 1, 0, 0, 0, 1]);\n    }\n    console.log(arraySorted(array));\n    return animations;\n}\n\nexport function getMergeSortAnimation(array) {\n    console.log('Start Merge Sort!');\n\n    const arr = mergeSort(array)\n    console.log(arraySorted(arr))\n\n}\n\nfunction mergeSort(array) {\n    if (!array || array.length < 2) return array;\n\n    const half = array.length / 2;\n    const left = array.splice(0, half);\n    merge(mergeSort(left), mergeSort(array)); \n}\n\nfunction merge(left, right) {\n    let arr = []\n    while (left.length && right.length) {\n        if (left[0] < right[0]) {\n            arr.push(left.shift())\n        }\n        else {\n            arr.push(right.shift())\n        }\n    }\n\n    return [...arr, ...left, ...right]\n}\n\nfunction arraySorted(array) {\n    if (array.length <= 1) { return true; }\n    \n    let pre = array[0];\n\n    for (let i = 1; i < array.length; i++){\n        if (array[i] < pre) {return false;}\n        pre = array[i];\n    }\n    return true;\n}"]},"metadata":{},"sourceType":"module"}